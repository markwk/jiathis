<?php
use Drupal\Component\Utility\SafeMarkup;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Url;
use Drupal\node\NodeInterface;
use Drupal\node\NodeTypeInterface;
use Drupal\node\Entity\Node;
use Drupal\Core\Language\LanguageInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
/**
 * @file
 * Main module file for the JiaThis Share Embed Module
 */

/**
 * Implements hook_theme().
 */
function jiathis_theme($existing, $type, $theme, $path) {
  return array(
  'jiathis_button' => array(
    'variables' => array(
      'button' => NULL,
      ),
    ),
  'jiathis_button_block' => array(
    'variables' => array(
      'button' => NULL
      ),
    ),
  );
}

/**
 * Implements hook_node_view().
 */
function jiathis_node_view(array &$build, EntityInterface $node, EntityViewDisplayInterface $display, $view_mode) {
  if (in_array($node->getType(), \Drupal::config('jiathis.page')->get('node_types'), TRUE)
    && \Drupal::currentUser()->hasPermission('view JiaThis sharebutton')) {
    $locations = \Drupal::config('jiathis.page')->get('node_location');
    $default = array(
       'count' => 0,
       'size' => '1',  // standard
       'css' => 'margin: 0 1em 1em 1em;float:right',
       'iconstyle' => '0',
		   'syntax' => 'JiaThis_sharescript',
		);
    $button_settings = array_merge($default, \Drupal::config('jiathis.page')->get('button_settings'));
    $button_settings['node'] = $node;
    $appkey = \Drupal::config('jiathis')->get('app_key');
    $syntax = $button_settings['syntax'];
    $count = $button_settings['count'];
    $size = $button_settings['size'];
    $iconstyle = $button_settings['iconstyle'];
    //$JiaThis_btn = $iconstyle + $size;

    list($count,$button) = _JiaThis_get_options ($iconstyle, $count, $size);
    $button = _create_jiathis_html($button,$count,$appkey,$iconstyle);

    // Wrap it and serve it
    if ($button_settings['css'] !== 'nowrapper') {
      $css =   empty($button_settings['css'])   ? '' : 'style="' .  SafeMarkup::checkPlain($button_settings['css']) . '"';
      $button = '<div class="jiathis-wrapper" '. $css . ' >' . $button . '</div>';
    }
    if (!empty($locations[$view_mode]) && empty($locations['link'])) {
				$build['jiathis'] = array(
          '#theme' => 'jiathis_button_block',
          '#button' => $button,
          '#weight' => \Drupal::config('jiathis.page')->get('weight'),
        );
    }
  }
}

/**
 * Implements hook_node_links_alter().
 */
 /**
function jiathis_node_links_alter(array &$links, NodeInterface $node, array &$context) {
  if (in_array($node->getType(), \Drupal::config('jiathis.page')->get('node_types'), TRUE)
    && \Drupal::currentUser()->hasPermission('view JiaThis sharebutton')) {
    $locations = \Drupal::config('jiathis.page')->get('node_location');
    $default = array(
       'count' => 0,
       'size' => '1',  // standard
       'css' => 'margin: 0 1em 1em 1em;float:right',
       'iconstyle' => '0',
		   'syntax' => 'JiaThis_sharescript',
		);
    $button_settings = array_merge($default, \Drupal::config('jiathis.page')->get('button_settings'));
    $button_settings['node'] = $node;
    $appkey = \Drupal::config('jiathis')->get('app_key');
    $syntax = $button_settings['syntax'];
    $count = $button_settings['count'];
    $size = $button_settings['size'];
    $iconstyle = $button_settings['iconstyle'];
    //$JiaThis_btn = $iconstyle + $size;

    list($count,$button) = _JiaThis_get_options ($iconstyle, $count, $size);
    $button = _create_jiathis_html($button,$count,$appkey,$iconstyle);

    // Wrap it and serve it
    if ($button_settings['css'] !== 'nowrapper') {
      $css =   empty($button_settings['css'])   ? '' : 'style="' .  SafeMarkup::checkPlain($button_settings['css']) . '"';
      $button = '<div class="jiathis-wrapper" '. $css . ' >' . $button . '</div>';
    }
    if (!empty($locations['link'])) {
      $jiathis_links['jiathis_button'] = array(
        'title' => $button,
        'html' => TRUE
      );
      $links['jiathis'] = array(
        '#theme' => 'links__node__jiathis',
        '#links' => $jiathis_links
      );
    }
  }
}
*/
function _generate__jia_block_button(){
	$default = array(
     'count_block' => 0,
     'size_block' => '1',  // standard
     'css_block' => 'margin: 0 1em 1em 1em;height:50px',
     'iconstyle_block' => '1',
     'syntax' => 'JiaThis_sharescript',
  );
  $button_settings = array_merge($default, \Drupal::config('jiathis.block')->get('button_settings'));

  $appkey = \Drupal::config('jiathis')->get('app_key');
//	$syntax = $variables['syntax'];
	$count = $button_settings['count_block'];
	$size = $button_settings['size_block'];
	$iconstyle = $button_settings['iconstyle_block'];
	$JiaThis_btn = $iconstyle + $size;

  list($count,$button,$iconstyle) = _JiaThis_get_options ($iconstyle, $count, $size);
  $button = _create_jiathis_html($button,$count,$appkey,$iconstyle);

	// Wrap it and serve it
	if ($button_settings['css_block'] !== 'nowrapper') {
	  $css =   empty($button_settings['css_block'])   ? '' : 'style="' .  SafeMarkup::checkPlain($button_settings['css_block']) . '"';
	  $button = '<div class="jiathis-wrapper" '. $css . ' >' . $button . '</div>';
	}
  return array(
    '#theme' => 'jiathis_button_block',
    '#button' => $button
  );
}



function _JiaThis_get_options ($iconstyle, $count, $size) {
  if($count == 1){
    $count = '<a class="jiathis_counter_style"></a>';
  } else {
    $count='';
  }


  //tiny icon
	if ($size == 4) {
    $b = '<div class="jiathis_style">
            <span class="jiathis_txt">分享到：</span>
            <a class="jiathis_button_icons_1"></a>
            <a class="jiathis_button_icons_2"></a>
            <a class="jiathis_button_icons_3"></a>
            <a class="jiathis_button_icons_4"></a>
            <a href="http://www.jiathis.com/share" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank"></a>
';
	}
	//small icon
	else if ($size == 3) {
    $b = '<div class="jiathis_style">
            <a class="jiathis_button_qzone"></a>
            <a class="jiathis_button_tsina"></a>
            <a class="jiathis_button_tqq"></a>
            <a class="jiathis_button_renren"></a>
            <a class="jiathis_button_kaixin001"></a>
            <a href="http://www.jiathis.com/share" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank"></a>';
	}
	//medium icon
	else if ($size == 2) {
    $b = '<div class="jiathis_style_24x24">
            <a class="jiathis_button_qzone"></a>
            <a class="jiathis_button_tsina"></a>
            <a class="jiathis_button_tqq"></a>
            <a class="jiathis_button_renren"></a>
            <a class="jiathis_button_kaixin001"></a>
            <a href="http://www.jiathis.com/share" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank"></a>';
	}
  //large icon && default
  else {
    $b = '<div class="jiathis_style_32x32">
            <a class="jiathis_button_qzone"></a>
            <a class="jiathis_button_tsina"></a>
            <a class="jiathis_button_tqq"></a>
            <a class="jiathis_button_renren"></a>
            <a class="jiathis_button_kaixin001"></a>
            <a href="http://www.jiathis.com/share" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank"></a>';
  }

  return array($count,$b,$iconstyle);
}


function _create_jiathis_html($button, $count, $appkey, $iconstyle) {
  //standard
  if($iconstyle=='0'){
    $iconstyle='_mini';
  }
  // mini
  else if ($iconstyle=='1'){
    $iconstyle='';
  }

 	$output = '<!-- JiaThis Button BEGIN -->' . $button . $count . '
            </div>
            <script type="text/javascript" src="http://v3.jiathis.com/code'.$iconstyle.'/jia.js" charset="utf-8"></script>
            <!-- JiaThis Button END -->';
	return $output;
}


/**
 * Helper function to trim whitespace and make sure to remove
 * the last character if it is a delimiter.
 *
 * @param $list
 *   A string representing a list of items
 * @param $delimiter
 *   A string that contains a delimiter.
 * @return
 *   A whitespace-trimmed string
 *
*/
function jiathis_trim($list, $delimiter) {
	$list = trim(SafeMarkup::checkPlain($list));
	  if (!empty($list)) {
	    if (drupal_substr($list, -1) === $delimiter) {
	      $list = drupal_substr($list, 0, -1);
	    }
	  }
	return $list;
}
